@page "/jobs"
@rendermode InteractiveServer

<PageTitle>Jobs</PageTitle>

<h1>Jobs</h1>
<h3>(Operations context)</h3>

<p>This component demonstrates accessing a service through the API Gateway.</p>

@if (_jobs == null)
{
    <p><em>Loading...</em></p>
}
else if (_jobs is not null && !_jobs.Any())
{
    <p><em>There are no jobs to display.</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Number</th>
                <th>Customer</th>
                <th>Shipper</th>
                <th>Supplier</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var job in _jobs)
            {
                <tr>
                    <td>@job.JobNumber</td>
                    <td>@job.CustomerName</td>
                    <td>@job.ShipperName</td>
                    <td>@job.SupplierName</td>
                </tr>
            }
        </tbody>
    </table>
}

@inject IConfiguration _configuration;
@inject IJobService _jobService;

@code {
    private IEnumerable<JobViewModel>? _jobs;

    protected override async Task OnInitializedAsync()
    {
        _jobs = await _jobService.GetJobsAsync();
    }
}
