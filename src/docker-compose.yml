services:
  operationsdb:
    image: postgres
    container_name: operationsdb
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=OperationsDb
    restart: always
    ports:
      - "5434:5432"
    volumes:
      - postgres_operations:/var/lib/postgresql/data/

  suppliersdb:
    image: mcr.microsoft.com/mssql/server
    container_name: suppliersdb
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=SwN12345678
    restart: always
    ports:
      - "1433:1433"
    volumes:
      - mssql_suppliers:/var/lib/mssql/data/

  transportmessagebroker:
    image: rabbitmq:management
    hostname: transport-mq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    restart: always
    ports:
      - "5673:5672"
      - "15673:15672"

  operations.api:
    image: ${DOCKER_REGISTRY-}operationsapi
    build:
      context: .
      dockerfile: Services/Operations/Operations.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ConnectionStrings__Database=Server=operationsdb;Port=5432;Database=OperationsDb;User Id=postgres;Password=postgres;Include Error Detail=true
      - MessageBroker__Host=amqp://transport-mq:5672
      - MessageBroker__UserName=guest
      - MessageBroker__Password=guest
    depends_on:
      - operationsdb
      - transportmessagebroker
    ports:
      - "6101:8080"
      - "6161:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  suppliers.api:
    image: ${DOCKER_REGISTRY-}suppliersapi
    build:
      context: .
      dockerfile: Services/Suppliers/Suppliers.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ConnectionStrings__Database=Server=suppliersdb;Database=SuppliersDb;User Id=sa;Password=SwN12345678;Encrypt=False;TrustServerCertificate=True
      - MessageBroker__Host=amqp://transport-mq:5672
      - MessageBroker__UserName=guest
      - MessageBroker__Password=guest
    depends_on:
     - suppliersdb
     - transportmessagebroker
    ports:
      - "6102:8080"
      - "6162:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  yarpapigateway:
    image: ${DOCKER_REGISTRY-}yarpapigateway
    build:
      context: .
      dockerfile: ApiGateway/YarpApiGateway/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
    depends_on:
      - operations.api
      - suppliers.api
    ports:
      - "6104:8080"
      - "6164:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  transportwebui:
    image: ${DOCKER_REGISTRY-}transportwebui
    build:
      context: .
      dockerfile: WebUI/TransportWebUI/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ApiGatewayUrl=http://yarpapigateway:8080
    depends_on:
      - yarpapigateway
    ports:
      - "6105:8080"
      - "6165:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

volumes:
  postgres_operations:
  mssql_suppliers:


